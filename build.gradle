buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'nu.studer:gradle-plugindev-plugin:4.1'
        classpath 'org.codehaus.groovy:groovy-backports-compat23:2.4.6'
        classpath 'com.calincosma:gradle-release:2.7.0'
    }
}

plugins {
    id 'org.gradle.java-gradle-plugin'
    id 'org.gradle.groovy'
    id 'maven-publish'
    id 'com.calincosma.release' version '2.8.0'
    id 'com.gradle.plugin-publish' version '0.18.0'
}

apply plugin: 'idea'

group='com.calincosma'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation("org.spockframework:spock-core:2.1-groovy-3.0") { exclude group: 'org.codehaus.groovy' }
    testImplementation "org.eclipse.jgit:org.eclipse.jgit:5.0.3.201809091024-r"
    testImplementation "cglib:cglib-nodep:3.2.8"
    testImplementation gradleTestKit()
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")
}

gradlePlugin {
    plugins {
        releasePlugin {
            displayName = 'Maven style release plugin for gradle'
            description = 'gradle-release is a plugin for providing a Maven-like release process to project using Gradle that supports git, subversion bazaar and mercurial'
            id = 'com.calincosma.release'
            implementationClass = 'com.calincosma.release.ReleasePlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/researchgate/gradle-release'
    vcsUrl = 'https://github.com/researchgate/gradle-release'
    tags = ['release', 'git', 'hg', 'mercurial', 'svn', 'subversion', 'bzr', 'bazaar']
}

tasks.withType(Test).configureEach {
    dependsOn tasks.jar
    useJUnitPlatform()
    systemProperties.put('currentVersion', project.version)
}

release {
    git {
        requireBranch = '(main|\\d+\\.\\d+)'
    }
}

wrapper.gradleVersion = '6.9.2'

updateVersion.doFirst {
    def file = file('README.md')
    def content = file.text
    def versionPattern = /\d+(?:\.\d+)+/
    content = content.replaceAll("id 'com.calincosma.release' version '${versionPattern}'",
            "id 'com.calincosma.release' version '${version}'")
    content = content.replaceAll("com.calincosma:gradle-release:${versionPattern}",
            "com.calincosma:gradle-release:${version}")
    file.text = content
}

task version {
    doLast {
        println "Gradle version: " + project.getGradle().getGradleVersion()
        println "Groovy version: " + GroovySystem.getVersion()
    }
}
